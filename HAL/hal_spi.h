#ifndef _VIRTUAL_OS_HAL_SPI_H
#define _VIRTUAL_OS_HAL_SPI_H

#include <stdint.h>
#include "hal.h"

typedef enum {
	HAL_SPI_0,
	HAL_SPI_1,
	HAL_SPI_2,
} HAL_SPI_ID_E;

typedef enum {
	HAL_SPI_MODE_FULLDOPLEX,
	HAL_SPI_MODE_RCV_ONLY,
	HAL_SPI_MODE_BI_RCV,
	HAL_SPI_MODE_BI_TRANSMIT, //双向收发
} HAL_SPI_TRANS_MODE_E;

typedef enum {
	HAL_SPI_MASTER,
	HAL_SPI_SLAVE,
} HAL_SPI_DEVICE_MODE_E;

typedef enum {
	HAL_SPI_FRAME_SIZE_4BIT,
	HAL_SPI_FRAME_SIZE_5BIT,
	HAL_SPI_FRAME_SIZE_6BIT,
	HAL_SPI_FRAME_SIZE_7BIT,
	HAL_SPI_FRAME_SIZE_8BIT,
	HAL_SPI_FRAME_SIZE_9BIT,
	HAL_SPI_FRAME_SIZE_10BIT,
	HAL_SPI_FRAME_SIZE_11BIT,
	HAL_SPI_FRAME_SIZE_12BIT,
	HAL_SPI_FRAME_SIZE_13BIT,
	HAL_SPI_FRAME_SIZE_14BIT,
	HAL_SPI_FRAME_SIZE_15BIT,
	HAL_SPI_FRAME_SIZE_16BIT,
} HAL_SPI_FRAME_SIZE_E;

typedef enum {
	HAL_SPI_LOW_POL_LEFT_EDGE,
	HAL_SPI_HIGH_POL_LEFT_EDGE,
	HAL_SPI_LOW_POL_RIGHT_EDGE,
	HAL_SPI_HIGH_POL_RIGHT_EDGE,
} HAL_SPI_POLARITY_PHASE_E;

typedef enum {
	HAL_NSS_SOFT,
	HAL_NSS_HARD,
} HAL_SPI_NSS_MODE_E;

typedef enum {
	HAL_SPI_PSC_2,
	HAL_SPI_PSC_4,
	HAL_SPI_PSC_8,
	HAL_SPI_PSC_16,
	HAL_SPI_PSC_32,
	HAL_SPI_PSC_64,
	HAL_SPI_PSC_128,
	HAL_SPI_PSC_256,
} HAL_SPI_PRESCAL_E;

typedef enum {
	HAL_SPI_ENDIAN_LSB,
	HAL_SPI_ENDIAN_MSB,
} HAL_SPI_ENDIAN_E;

typedef enum {
	HAL_SPI_FIFO_SIZE_HALFWORD,
	HAL_SPI_FIFO_SIZE_BYTE,
} HAL_SPI_RX_FIFO_ACCESS_SIZE_E;

typedef enum {
	HAL_QSPI_DIR_RD,
	HAL_QSPI_DIR_WR,
} HAL_QSPI_DIR_E;

typedef struct {
	HAL_SPI_TRANS_MODE_E trans_mode;
	HAL_SPI_DEVICE_MODE_E device_mode;
	HAL_SPI_FRAME_SIZE_E frame_size;
	HAL_SPI_POLARITY_PHASE_E polarity_and_phase;
	HAL_SPI_NSS_MODE_E nss_mode;
	HAL_SPI_PRESCAL_E spi_prescal;
	HAL_SPI_ENDIAN_E endian;

	HAL_SPI_RX_FIFO_ACCESS_SIZE_E rx_fifo_access;
	HAL_STATUS_E use_crc;
	HAL_STATUS_E use_qspi;
} HAL_SPI_CFG_T;

void hal_spi_deinit(HAL_SPI_ID_E spix);
void hal_spi_init(HAL_SPI_ID_E spix, HAL_SPI_CFG_T *spi_cfg);

/**
 * @brief send one byte and recieve the response
*/
uint8_t hal_spi_send_byte(HAL_SPI_ID_E spix, uint8_t byte);

void hal_qspi_en_dis_cfg(HAL_SPI_ID_E spix, HAL_STATUS_E flag);
void hal_qspi_wr_rd_enable(HAL_SPI_ID_E spix, HAL_QSPI_DIR_E dir);
#endif